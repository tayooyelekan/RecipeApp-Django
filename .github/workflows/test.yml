name: test, build and deploy workflow
on: 
    push:
        branches: main
jobs:
    test:
        runs-on: ubuntu-latest    
        steps: 
         - name: Get Code from repo
           uses: actions/checkout@v4    
         - name: Find manage.py file
           run: cat manage.py
    build:
        runs-on: ubuntu-latest
        needs: test
        steps:
            - name: Get Code from repo
              uses: actions/checkout@v4
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
            - name: Log in to Docker Hub
              uses: docker/login-action@v2
              with:
                    username: ${{ secrets.DOCKER_USERNAME }}
                    password: ${{ secrets.DOCKER_PASSWORD }}       
            - name: Build and push Docker image
              uses: docker/build-push-action@v3
              with:
                context: .
                push: true
                tags: tayo9/recipeapp-django 
    deploy:
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                    aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                    aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                    aws-region: us-east-1    
            - name: Log in to Docker Hub
              uses: docker/login-action@v2
              with:
                username: ${{ secrets.DOCKER_USERNAME }}
                password: ${{ secrets.DOCKER_PASSWORD }} 
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
          
            - name: Pull Docker image
              run: docker pull ${{ secrets.DOCKER_USERNAME }}/recipeapp-django   
              
            - name: Save Docker image
              run: docker save -o image.tar ${{ secrets.DOCKER_USERNAME }}/recipeapp-django
        
            - name: Upload Docker image artifact
              uses: actions/upload-artifact@v3
              with:
                name: docker-image
                path: image.tar

            - name: Push Docker image to EC2 instance
              env:
                  EC2_INSTANCE_ID: i-0ec48848d0e369a4a 
              run: |
                  aws ec2 get-password-data --instance-id $EC2_INSTANCE_ID --priv-launch-key ${{ secrets.EC2_PRIVATE_KEY }} --query PasswordData --output text | base64 --decode > ec2_password.txt
                  scp -i ${{ secrets.EC2_PRIVATE_KEY }} -o StrictHostKeyChecking=no image.tar ec2-user@${{ secrets.EC2_PUBLIC_DNS }}:/home/ec2-user
                  ssh -i ${{ secrets.EC2_PRIVATE_KEY }} -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_PUBLIC_DNS }} "docker load -i image.tar && docker run ${{ secrets.DOCKER_USERNAME }}/recipeapp-django"

